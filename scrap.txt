    """
    elif valid.lower() == 'tracks':
        tracks = get_top_tracks()
        revised_prompt = prompt_engineer(tracks) # Make the top tracks into a playlist
        json_completed_prompt = get_completion(revised_prompt) # Json data that we will make our request with
        data = make_playlist_request(json_completed_prompt)
        return tracks
    """

'''
def get_top_tracks():
    list_of_tracks = []
    if 'access_token' not in session:
        return redirect('/login')
    
    if datetime.now().timestamp() > session['expires_at']:
        return redirect('/refresh-token')
    
    headers = {
        'Authorization': f"Bearer {session['access_token']}",
        "Content-Type": "application/json"
    }

    response = requests.get(API_BASE_URL + "me/top/tracks", headers=headers, params={'time_range': 'medium_term', "limit": 10})
    top_tracks_json = response.json()

    str_tracks = ""
    song_count = 1
    for i in range(len(top_tracks_json['items'])):
        artist = top_tracks_json['items'][i]['artists'][0]['name']
        song =  top_tracks_json['items'][i]['name']
        str_tracks += str(song_count) + ". " + song + " - " + artist + ", "
        song_count += 1
    return str_tracks
''' 